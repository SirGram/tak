/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Cube: THREE.Mesh;
    };
    materials: {
        ['Material.001']: THREE.MeshStandardMaterial;
    };
};

export function BoardModel(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/board.glb') as GLTFResult;
    const material = materials['Material.001'];

    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube.geometry}
                material={material}
                scale={[12.139, 0.526, 12.139]}
                position={[8, -0.5, 8.4]}
            />
        </group>
    );
}

useGLTF.preload('/board.glb');
